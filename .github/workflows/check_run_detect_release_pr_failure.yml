name: detect critical check failures

on:
  status: {}

  check_suite:
    types: [completed]
    steps:
      - name: Debug
        run: |
          jq < ${GITHUB_EVENT_PATH}

jobs:
  investigate_event:
    runs-on: ubuntu-latest
    if: >-
      (github.event.state == 'error' || github.event.state == 'failure')
      && github.event.description != 'Your CircleCI tests were canceled'
    steps:
      - name: Debug
        env:
          STATE: ${{ github.event.state }}
          DESCRIPTION: ${{ github.event.description }}
          # TODO: uncomment once confident in the logic
          # GITHUB_TOKEN: ${{ secrets.HRA_GITHUB_TOKEN }}
        run: |
          echo "$STATE": "$DESCRIPTION"
          jq < ${GITHUB_EVENT_PATH}

          # ignore this check if the commit is already on develop
          if [[ "true" == $(jq --raw-output '.branches | map(select(.name  == "develop") | .name) | length != 0' < ${GITHUB_EVENT_PATH}) ]]; then
            exit 0
          fi

          export pr_base="$(jq --raw-output '.repository.default_branch' < ${GITHUB_EVENT_PATH})"
          export pr_head="$(jq --raw-output '.branches | map(select(.name | startswith("pr_")) | .name) | .[0]' < ${GITHUB_EVENT_PATH})"
          export target_url="$(jq --raw-output '.target_url' < ${GITHUB_EVENT_PATH})"
          export pr_id="$(gh pr list --state open --json id --jq '.[0].id' --base develop --head release-improve-resilience)"
          export pr_number="$(gh pr list --state open --json number--jq '.[0].number' --base develop --head release-improve-resilience)"

          cat <<EOF | gh pr comment ${pr_number} --body-file -
          _this PR was determined to be part of a release due to its branch prefix 'release-'.
          assigning the core-dev team to take a look here._

          ---
          ${DESCRIPTION}

          details: ${target_url}
          EOF

          gh pr edit ${pr_number} --add-assignee "holochain/core-dev"
